/* 자손 결합자 */
.outer li {
  color: olivedrab;
}

/* 자식(1촌 자손) 결합자 */
.outer > li {
  color: dodgerblue;
}

/* 자식의 자손을 선택하고 싶다면 작성하는 코드 */
.outer > li li {
  text-decoration: underline;
}

/* 즉 > 과 공백( ) 을 이용하여 특정한 조건을 걸어 CSS 를 적용시킬 수 있음 
  CSS 문서에서 .outer li 부분 (2~4번 라인) 에서 color : olivedrab; 주석처리하면 .outer > li (7~9번 라인) 에 지정한 dodgerblue 가 자식 뿐만 아니라 손자까지 (outer 기준) 적용되는 것을 확인 할 수 있는데, 이는 서체 및 텍스트 관련 CSS 의 일부 속성들이 그 자식에게까지 자동 상속되기 때문
  
  즉, 자식 결합자라도 적용한 속성이 상속되는 속성이라면 이를 덮어쓰는 다른 선택자와 속성을 지정하지 않는 한 그 아래 자식들도 해당 속성을 상속받음.

  -> 상속관련은 추후 수업 예정
*/

/* 뒤따르는 모든 동생들 결합자 */
.starter ~ li {
  font-style: italic;
}

/* 뒤따르는 바로 다음 동생 결합자만 적용 */
.starter + li {
  font-weight: bold;
}

/* 첫번 째, 마지막 요소 가상 클래스 */
ol li:first-child,
ol li:last-child{
  color: yellowgreen;
}
/*
  ol 내의 li 태그의 첫 번째 요소 (first-child) 와 li 태그의 마지막 요소(last-child) 를 지정하여 특정 태그에 속성을 기입하지 않고도 CSS 를 적용시킬 수 있음.
*/
/* ~가 아닌 요소 가상 클래스 */
/* 1 */
.outer > li:not(:last-child){
  text-decoration: line-through;  /* 취소선을 의미하는 CSS */
}

/* 2 */
ul:not(.outer){
  font-weight: bold;
}

/* 
  1번 해석 : outer 클래스의 직계 자식인 (>) li 태그 중에서 마지막 요소 (last-child) 가 아닌 것을 골라 취소선 적용

  2번 해석 : ul 태그 중에 outer 클래스가 아닌 것을 골라서 그 안에 있는 li 태그에만 볼드 처리 그 결과 과일 항목 아래에 있는 ul 태그는 outer 클래스가 아니기 때문에
  사과 / 포도 / 딸기 / 키위 만 볼드체 적용
*/
/* ~번 째 요소 가상 클래스 */
ol li:nth-child(3){
  font: bold;
  color: deeppink;
}

ol li:nth-child(4n){/* 4,8 에 적용됨 */
  font: bold;
  color: deepskyblue;
}

ol li:nth-child(2n+3){/* 3,5,7,9 에 적용됨 */
  font: bold;
  color: darkgreen;
}

ol li:nth-child(even){/* 짝수에만 적용됨 */
  font: bold;
  color: white;
}

/* 
  이상의 코드들에서 주의할 점:
    nth-child() 의 소괄호 내에 들어갈 수 있는 사례 :
    1) # : 특정 수치
    2) #n : n번째 마다
    3) #n + @ : n번 째마다+@ 의 값에
    4) odd : 홀수 번째에
    5) even : 짝수 번째에

    일일이 쓰는 이유 :
    위 코드 사례를 통해 알아가고싶어도 뒷부분에 작성된 게 우선 적용되기 때문에 참조 바람.

    마우스오버 (:hover)
*/

/* 마우스오버 가상 클래스 */
li:hover{
  font-weight: bold;
  color: blue;
}

/*
  hover 의미가 떠다니다라는 의미로, 마우스를 특정 요소 위에 올려뒀을 때 적용
  단 구체적으로 명시한 요소들은 우선순위가 높기 때문에 적용이 안되는 경우 또한 있음.
*/